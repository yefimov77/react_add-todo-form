{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","helpers.ts","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","props","todos","map","getUsetById","users","find","createIdForTodo","length","arrId","Math","max","App","useState","todosFromServer","setTodos","selectedUserId","setSelectedUserId","setTitle","isTitleError","setIsTitleError","isSelectedUserIdError","setSelectedUserIdError","toDosForRender","getToDosWithUsers","usersFromServer","action","method","onSubmit","event","preventDefault","currentTodos","newTodo","htmlFor","placeholder","type","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca34d7a6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types/types';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user.email}`}\n    >\n      {user.name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { ToDoWithusers } from '../../types/types';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: ToDoWithusers;\n}\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      { todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { ToDoWithusers } from '../../types/types';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: ToDoWithusers[];\n}\n\nexport const TodoList: FC<Props> = (props) => {\n  const { todos } = props;\n\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import { ToDo, ToDoWithusers, User } from './types/types';\n\nexport function getUsetById(users: User[], id: number): User | null {\n  return users.find(user => user.id === id) || null;\n}\n\nexport function getToDosWithUsers(\n  todos: ToDo[],\n  users: User[],\n): ToDoWithusers[] {\n  return todos.map(todo => {\n    return {\n      ...todo,\n      user: getUsetById(users, todo.userId),\n    };\n  });\n}\n\nexport function createIdForTodo(todos: ToDo[]): number {\n  if (todos.length === 0) {\n    return 1;\n  }\n\n  const arrId: number[] = todos.map(todo => todo.id);\n\n  return Math.max(...arrId) + 1;\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { createIdForTodo, getToDosWithUsers } from './helpers';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [title, setTitle] = useState('');\n\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isSelectedUserIdError, setSelectedUserIdError] = useState(false);\n\n  const toDosForRender = getToDosWithUsers(todos, usersFromServer);\n\n  const addTodo = (name:string, userId: number) => {\n    setTodos((currentTodos) => {\n      const newTodo = {\n        id: createIdForTodo(currentTodos),\n        title: name,\n        completed: false,\n        userId,\n      };\n\n      return [...currentTodos, newTodo];\n    });\n  };\n\n  const resetForm = () => {\n    setSelectedUserId(0);\n    setTitle('');\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsTitleError(!title);\n    setSelectedUserIdError(!selectedUserId);\n\n    if (!title || !selectedUserId) {\n      return;\n    }\n\n    addTodo(title, selectedUserId);\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            placeholder=\"Your title here\"\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setIsTitleError(false);\n            }}\n          />\n          {isTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User:</label>\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={(event) => {\n              setSelectedUserId(+event.target.value);\n              setSelectedUserIdError(false);\n            }}\n          >\n            <option\n              value={0}\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => {\n              return (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              );\n            })}\n          </select>\n\n          {isSelectedUserIdError\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={toDosForRender} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}